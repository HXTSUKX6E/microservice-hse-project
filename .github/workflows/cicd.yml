name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    - name: Verify Docker Compose
      run: docker-compose --version

  databases:
    runs-on: ubuntu-latest
    needs: setup
    services:
      auth-db:
        image: postgres:latest
        env:
          POSTGRES_DB: AuthDb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345678
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U postgres" --health-interval=5s --health-timeout=5s --health-retries=5
      
      company-vacancy-db:
        image: postgres:latest
        env:
          POSTGRES_DB: CompVacDb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345678
        ports:
          - 5433:5432
        options: --health-cmd="pg_isready -U postgres" --health-interval=5s --health-timeout=5s --health-retries=5
    steps:
    - name: Wait for databases
      run: |
        echo "Waiting for databases..."
        timeout 30s bash -c 'until nc -z localhost 5433; do sleep 1; echo "Retrying..."; done'

  auth-service:
    runs-on: ubuntu-latest
    needs: [setup, databases]
    steps:
    - uses: actions/checkout@v4
    - name: Build auth-service
      working-directory: auth-service/demo
      run: mvn -B clean package -DskipTests
    - name: Run tests for auth-service
      working-directory: auth-service/demo
      run: mvn test

  company-vacancy-service:
    runs-on: ubuntu-latest
    needs: [setup, databases]
    steps:
    - uses: actions/checkout@v4
    - name: Build company-vacancy-service
      working-directory: company-vacancy-service/demo
      run: mvn clean package
    - name: Run tests for company-vacancy-service
      working-directory: company-vacancy-service/demo
      run: |
        mvn test -B \
        -Dspring.profiles.active=ci \
        -Dspring.datasource.url=jdbc:postgresql://localhost:5433/CompVacDb \
        -Dspring.datasource.username=postgres \
        -Dspring.datasource.password=12345678

  cleanup:
    runs-on: ubuntu-latest
    needs: [auth-service, company-vacancy-service]
    if: always()
    steps:
    - name: Stop containers
      run: docker-compose down || true
